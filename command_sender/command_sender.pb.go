// Code generated by protoc-gen-go. DO NOT EDIT.
// source: protos/command_sender.proto

package command_sender

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Send parameter
type SendParameter struct {
	Vin                  string   `protobuf:"bytes,1,opt,name=vin,proto3" json:"vin,omitempty"`
	Timestamp            int64    `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Command              []byte   `protobuf:"bytes,3,opt,name=command,proto3" json:"command,omitempty"`
	Extra                []byte   `protobuf:"bytes,4,opt,name=extra,proto3" json:"extra,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SendParameter) Reset()         { *m = SendParameter{} }
func (m *SendParameter) String() string { return proto.CompactTextString(m) }
func (*SendParameter) ProtoMessage()    {}
func (*SendParameter) Descriptor() ([]byte, []int) {
	return fileDescriptor_dd1a5a3c4238d831, []int{0}
}

func (m *SendParameter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendParameter.Unmarshal(m, b)
}
func (m *SendParameter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendParameter.Marshal(b, m, deterministic)
}
func (m *SendParameter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendParameter.Merge(m, src)
}
func (m *SendParameter) XXX_Size() int {
	return xxx_messageInfo_SendParameter.Size(m)
}
func (m *SendParameter) XXX_DiscardUnknown() {
	xxx_messageInfo_SendParameter.DiscardUnknown(m)
}

var xxx_messageInfo_SendParameter proto.InternalMessageInfo

func (m *SendParameter) GetVin() string {
	if m != nil {
		return m.Vin
	}
	return ""
}

func (m *SendParameter) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *SendParameter) GetCommand() []byte {
	if m != nil {
		return m.Command
	}
	return nil
}

func (m *SendParameter) GetExtra() []byte {
	if m != nil {
		return m.Extra
	}
	return nil
}

// Send parameter
type BatchSendParameter struct {
	Parameters           []*SendParameter `protobuf:"bytes,1,rep,name=parameters,proto3" json:"parameters,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *BatchSendParameter) Reset()         { *m = BatchSendParameter{} }
func (m *BatchSendParameter) String() string { return proto.CompactTextString(m) }
func (*BatchSendParameter) ProtoMessage()    {}
func (*BatchSendParameter) Descriptor() ([]byte, []int) {
	return fileDescriptor_dd1a5a3c4238d831, []int{1}
}

func (m *BatchSendParameter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BatchSendParameter.Unmarshal(m, b)
}
func (m *BatchSendParameter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BatchSendParameter.Marshal(b, m, deterministic)
}
func (m *BatchSendParameter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BatchSendParameter.Merge(m, src)
}
func (m *BatchSendParameter) XXX_Size() int {
	return xxx_messageInfo_BatchSendParameter.Size(m)
}
func (m *BatchSendParameter) XXX_DiscardUnknown() {
	xxx_messageInfo_BatchSendParameter.DiscardUnknown(m)
}

var xxx_messageInfo_BatchSendParameter proto.InternalMessageInfo

func (m *BatchSendParameter) GetParameters() []*SendParameter {
	if m != nil {
		return m.Parameters
	}
	return nil
}

// Send result
type SendResult struct {
	Success              bool     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	ErrorMessage         string   `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SendResult) Reset()         { *m = SendResult{} }
func (m *SendResult) String() string { return proto.CompactTextString(m) }
func (*SendResult) ProtoMessage()    {}
func (*SendResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_dd1a5a3c4238d831, []int{2}
}

func (m *SendResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendResult.Unmarshal(m, b)
}
func (m *SendResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendResult.Marshal(b, m, deterministic)
}
func (m *SendResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendResult.Merge(m, src)
}
func (m *SendResult) XXX_Size() int {
	return xxx_messageInfo_SendResult.Size(m)
}
func (m *SendResult) XXX_DiscardUnknown() {
	xxx_messageInfo_SendResult.DiscardUnknown(m)
}

var xxx_messageInfo_SendResult proto.InternalMessageInfo

func (m *SendResult) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *SendResult) GetErrorMessage() string {
	if m != nil {
		return m.ErrorMessage
	}
	return ""
}

// Query parameter
type QueryParameter struct {
	// id format: vin + hex(time)
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QueryParameter) Reset()         { *m = QueryParameter{} }
func (m *QueryParameter) String() string { return proto.CompactTextString(m) }
func (*QueryParameter) ProtoMessage()    {}
func (*QueryParameter) Descriptor() ([]byte, []int) {
	return fileDescriptor_dd1a5a3c4238d831, []int{3}
}

func (m *QueryParameter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryParameter.Unmarshal(m, b)
}
func (m *QueryParameter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryParameter.Marshal(b, m, deterministic)
}
func (m *QueryParameter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryParameter.Merge(m, src)
}
func (m *QueryParameter) XXX_Size() int {
	return xxx_messageInfo_QueryParameter.Size(m)
}
func (m *QueryParameter) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryParameter.DiscardUnknown(m)
}

var xxx_messageInfo_QueryParameter proto.InternalMessageInfo

func (m *QueryParameter) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

// Query result
type QueryResult struct {
	State                string   `protobuf:"bytes,1,opt,name=state,proto3" json:"state,omitempty"`
	CommandContent       []byte   `protobuf:"bytes,2,opt,name=command_content,json=commandContent,proto3" json:"command_content,omitempty"`
	SendTime             uint64   `protobuf:"varint,3,opt,name=send_time,json=sendTime,proto3" json:"send_time,omitempty"`
	SendHost             string   `protobuf:"bytes,4,opt,name=send_host,json=sendHost,proto3" json:"send_host,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QueryResult) Reset()         { *m = QueryResult{} }
func (m *QueryResult) String() string { return proto.CompactTextString(m) }
func (*QueryResult) ProtoMessage()    {}
func (*QueryResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_dd1a5a3c4238d831, []int{4}
}

func (m *QueryResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryResult.Unmarshal(m, b)
}
func (m *QueryResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryResult.Marshal(b, m, deterministic)
}
func (m *QueryResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryResult.Merge(m, src)
}
func (m *QueryResult) XXX_Size() int {
	return xxx_messageInfo_QueryResult.Size(m)
}
func (m *QueryResult) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryResult.DiscardUnknown(m)
}

var xxx_messageInfo_QueryResult proto.InternalMessageInfo

func (m *QueryResult) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

func (m *QueryResult) GetCommandContent() []byte {
	if m != nil {
		return m.CommandContent
	}
	return nil
}

func (m *QueryResult) GetSendTime() uint64 {
	if m != nil {
		return m.SendTime
	}
	return 0
}

func (m *QueryResult) GetSendHost() string {
	if m != nil {
		return m.SendHost
	}
	return ""
}

func init() {
	proto.RegisterType((*SendParameter)(nil), "command_sender.SendParameter")
	proto.RegisterType((*BatchSendParameter)(nil), "command_sender.BatchSendParameter")
	proto.RegisterType((*SendResult)(nil), "command_sender.SendResult")
	proto.RegisterType((*QueryParameter)(nil), "command_sender.QueryParameter")
	proto.RegisterType((*QueryResult)(nil), "command_sender.QueryResult")
}

func init() { proto.RegisterFile("protos/command_sender.proto", fileDescriptor_dd1a5a3c4238d831) }

var fileDescriptor_dd1a5a3c4238d831 = []byte{
	// 373 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x92, 0x4f, 0x4f, 0xf2, 0x40,
	0x10, 0xc6, 0xdf, 0x52, 0x78, 0xa5, 0xc3, 0x1f, 0x75, 0xe5, 0xd0, 0x80, 0x9a, 0xa6, 0x1e, 0xec,
	0x09, 0x12, 0x3c, 0x1a, 0x2f, 0x70, 0x31, 0x1a, 0x8d, 0x2e, 0x26, 0x26, 0x5e, 0xc8, 0xda, 0x4e,
	0xa0, 0x89, 0xed, 0x92, 0xdd, 0xc5, 0xe8, 0x17, 0xf0, 0x73, 0x9b, 0xdd, 0x6d, 0xc5, 0x12, 0xe2,
	0xa9, 0x9d, 0xe7, 0x99, 0xd9, 0xd9, 0xe7, 0xd7, 0xc2, 0x60, 0x25, 0xb8, 0xe2, 0x72, 0x14, 0xf3,
	0x2c, 0x63, 0x79, 0x32, 0x97, 0x98, 0x27, 0x28, 0x86, 0x46, 0x25, 0xdd, 0xaa, 0x1a, 0x72, 0xe8,
	0xcc, 0x30, 0x4f, 0x1e, 0x98, 0x60, 0x19, 0x2a, 0x14, 0xe4, 0x00, 0xdc, 0xf7, 0x34, 0xf7, 0x9d,
	0xc0, 0x89, 0x3c, 0xaa, 0x5f, 0xc9, 0x31, 0x78, 0x2a, 0xcd, 0x50, 0x2a, 0x96, 0xad, 0xfc, 0x5a,
	0xe0, 0x44, 0x2e, 0xdd, 0x08, 0xc4, 0x87, 0xbd, 0xe2, 0x48, 0xdf, 0x0d, 0x9c, 0xa8, 0x4d, 0xcb,
	0x92, 0xf4, 0xa0, 0x81, 0x1f, 0x4a, 0x30, 0xbf, 0x6e, 0x74, 0x5b, 0x84, 0x33, 0x20, 0x13, 0xa6,
	0xe2, 0x65, 0x75, 0xeb, 0x15, 0xc0, 0xaa, 0x2c, 0xa4, 0xef, 0x04, 0x6e, 0xd4, 0x1a, 0x9f, 0x0c,
	0xb7, 0x12, 0x54, 0x46, 0xe8, 0xaf, 0x81, 0xf0, 0x16, 0x40, 0x9b, 0x14, 0xe5, 0xfa, 0x4d, 0xe9,
	0x2b, 0xc9, 0x75, 0x1c, 0xa3, 0x94, 0x26, 0x46, 0x93, 0x96, 0x25, 0x39, 0x83, 0x0e, 0x0a, 0xc1,
	0xc5, 0x3c, 0x43, 0x29, 0xd9, 0x02, 0x4d, 0x1c, 0x8f, 0xb6, 0x8d, 0x78, 0x67, 0xb5, 0x30, 0x80,
	0xee, 0xe3, 0x1a, 0xc5, 0xe7, 0xe6, 0x76, 0x5d, 0xa8, 0xa5, 0x49, 0x81, 0xa4, 0x96, 0x26, 0xe1,
	0x97, 0x03, 0x2d, 0xd3, 0x52, 0x2c, 0xec, 0x41, 0x43, 0x2a, 0xa6, 0xb0, 0x68, 0xb1, 0x05, 0x39,
	0x87, 0xfd, 0x32, 0x40, 0xcc, 0x73, 0x85, 0xb9, 0x32, 0xeb, 0xda, 0xb4, 0xfc, 0x06, 0x53, 0xab,
	0x92, 0x01, 0x78, 0x3a, 0xe1, 0x5c, 0x43, 0x35, 0x10, 0xeb, 0xb4, 0xa9, 0x85, 0xa7, 0x34, 0xc3,
	0x1f, 0x73, 0xc9, 0xa5, 0x32, 0x24, 0x3d, 0x6b, 0x5e, 0x73, 0xa9, 0xc6, 0x14, 0xea, 0x3a, 0x37,
	0xb9, 0x81, 0x96, 0x7e, 0x4e, 0x0b, 0xf2, 0x7f, 0x93, 0xeb, 0xf7, 0x77, 0xd9, 0x36, 0x4a, 0xf8,
	0x6f, 0xfc, 0x0c, 0x0d, 0x93, 0x8d, 0xdc, 0x43, 0xc7, 0x72, 0x10, 0x7c, 0x21, 0x34, 0xbd, 0xd3,
	0xed, 0xb9, 0x2a, 0xa6, 0xfe, 0x60, 0xa7, 0x5f, 0x1e, 0x3c, 0x39, 0x7a, 0x39, 0x1c, 0x8e, 0x2e,
	0xab, 0x2d, 0xaf, 0xff, 0xcd, 0x6f, 0x79, 0xf1, 0x1d, 0x00, 0x00, 0xff, 0xff, 0x87, 0xda, 0x3b,
	0xb3, 0xb5, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// SendClient is the client API for Send service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SendClient interface {
	SendCommand(ctx context.Context, in *SendParameter, opts ...grpc.CallOption) (*SendResult, error)
}

type sendClient struct {
	cc *grpc.ClientConn
}

func NewSendClient(cc *grpc.ClientConn) SendClient {
	return &sendClient{cc}
}

func (c *sendClient) SendCommand(ctx context.Context, in *SendParameter, opts ...grpc.CallOption) (*SendResult, error) {
	out := new(SendResult)
	err := c.cc.Invoke(ctx, "/command_sender.Send/SendCommand", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SendServer is the server API for Send service.
type SendServer interface {
	SendCommand(context.Context, *SendParameter) (*SendResult, error)
}

// UnimplementedSendServer can be embedded to have forward compatible implementations.
type UnimplementedSendServer struct {
}

func (*UnimplementedSendServer) SendCommand(ctx context.Context, req *SendParameter) (*SendResult, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendCommand not implemented")
}

func RegisterSendServer(s *grpc.Server, srv SendServer) {
	s.RegisterService(&_Send_serviceDesc, srv)
}

func _Send_SendCommand_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SendParameter)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SendServer).SendCommand(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/command_sender.Send/SendCommand",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SendServer).SendCommand(ctx, req.(*SendParameter))
	}
	return interceptor(ctx, in, info, handler)
}

var _Send_serviceDesc = grpc.ServiceDesc{
	ServiceName: "command_sender.Send",
	HandlerType: (*SendServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SendCommand",
			Handler:    _Send_SendCommand_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "protos/command_sender.proto",
}

// QueryClient is the client API for Query service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type QueryClient interface {
	QueryProgress(ctx context.Context, in *QueryParameter, opts ...grpc.CallOption) (*QueryResult, error)
}

type queryClient struct {
	cc *grpc.ClientConn
}

func NewQueryClient(cc *grpc.ClientConn) QueryClient {
	return &queryClient{cc}
}

func (c *queryClient) QueryProgress(ctx context.Context, in *QueryParameter, opts ...grpc.CallOption) (*QueryResult, error) {
	out := new(QueryResult)
	err := c.cc.Invoke(ctx, "/command_sender.Query/QueryProgress", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// QueryServer is the server API for Query service.
type QueryServer interface {
	QueryProgress(context.Context, *QueryParameter) (*QueryResult, error)
}

// UnimplementedQueryServer can be embedded to have forward compatible implementations.
type UnimplementedQueryServer struct {
}

func (*UnimplementedQueryServer) QueryProgress(ctx context.Context, req *QueryParameter) (*QueryResult, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QueryProgress not implemented")
}

func RegisterQueryServer(s *grpc.Server, srv QueryServer) {
	s.RegisterService(&_Query_serviceDesc, srv)
}

func _Query_QueryProgress_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryParameter)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryServer).QueryProgress(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/command_sender.Query/QueryProgress",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryServer).QueryProgress(ctx, req.(*QueryParameter))
	}
	return interceptor(ctx, in, info, handler)
}

var _Query_serviceDesc = grpc.ServiceDesc{
	ServiceName: "command_sender.Query",
	HandlerType: (*QueryServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "QueryProgress",
			Handler:    _Query_QueryProgress_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "protos/command_sender.proto",
}
