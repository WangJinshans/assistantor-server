// Code generated by protoc-gen-go. DO NOT EDIT.
// source: protos/connection.proto

package connection_manager

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// 查询vin所在pod
type QueryConnectionParameter struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QueryConnectionParameter) Reset()         { *m = QueryConnectionParameter{} }
func (m *QueryConnectionParameter) String() string { return proto.CompactTextString(m) }
func (*QueryConnectionParameter) ProtoMessage()    {}
func (*QueryConnectionParameter) Descriptor() ([]byte, []int) {
	return fileDescriptor_b2295f3cef83aa84, []int{0}
}

func (m *QueryConnectionParameter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryConnectionParameter.Unmarshal(m, b)
}
func (m *QueryConnectionParameter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryConnectionParameter.Marshal(b, m, deterministic)
}
func (m *QueryConnectionParameter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryConnectionParameter.Merge(m, src)
}
func (m *QueryConnectionParameter) XXX_Size() int {
	return xxx_messageInfo_QueryConnectionParameter.Size(m)
}
func (m *QueryConnectionParameter) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryConnectionParameter.DiscardUnknown(m)
}

var xxx_messageInfo_QueryConnectionParameter proto.InternalMessageInfo

func (m *QueryConnectionParameter) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

// 查询host所有connection
type QueryConnectionsParameter struct {
	Host                 string   `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QueryConnectionsParameter) Reset()         { *m = QueryConnectionsParameter{} }
func (m *QueryConnectionsParameter) String() string { return proto.CompactTextString(m) }
func (*QueryConnectionsParameter) ProtoMessage()    {}
func (*QueryConnectionsParameter) Descriptor() ([]byte, []int) {
	return fileDescriptor_b2295f3cef83aa84, []int{1}
}

func (m *QueryConnectionsParameter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryConnectionsParameter.Unmarshal(m, b)
}
func (m *QueryConnectionsParameter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryConnectionsParameter.Marshal(b, m, deterministic)
}
func (m *QueryConnectionsParameter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryConnectionsParameter.Merge(m, src)
}
func (m *QueryConnectionsParameter) XXX_Size() int {
	return xxx_messageInfo_QueryConnectionsParameter.Size(m)
}
func (m *QueryConnectionsParameter) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryConnectionsParameter.DiscardUnknown(m)
}

var xxx_messageInfo_QueryConnectionsParameter proto.InternalMessageInfo

func (m *QueryConnectionsParameter) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

type Connection struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	LastUpdated          string   `protobuf:"bytes,2,opt,name=last_updated,json=lastUpdated,proto3" json:"last_updated,omitempty"`
	Host                 string   `protobuf:"bytes,3,opt,name=host,proto3" json:"host,omitempty"`
	Address              string   `protobuf:"bytes,4,opt,name=address,proto3" json:"address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Connection) Reset()         { *m = Connection{} }
func (m *Connection) String() string { return proto.CompactTextString(m) }
func (*Connection) ProtoMessage()    {}
func (*Connection) Descriptor() ([]byte, []int) {
	return fileDescriptor_b2295f3cef83aa84, []int{2}
}

func (m *Connection) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Connection.Unmarshal(m, b)
}
func (m *Connection) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Connection.Marshal(b, m, deterministic)
}
func (m *Connection) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Connection.Merge(m, src)
}
func (m *Connection) XXX_Size() int {
	return xxx_messageInfo_Connection.Size(m)
}
func (m *Connection) XXX_DiscardUnknown() {
	xxx_messageInfo_Connection.DiscardUnknown(m)
}

var xxx_messageInfo_Connection proto.InternalMessageInfo

func (m *Connection) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Connection) GetLastUpdated() string {
	if m != nil {
		return m.LastUpdated
	}
	return ""
}

func (m *Connection) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

func (m *Connection) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

type Connections struct {
	Connections          []*Connection `protobuf:"bytes,1,rep,name=connections,proto3" json:"connections,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *Connections) Reset()         { *m = Connections{} }
func (m *Connections) String() string { return proto.CompactTextString(m) }
func (*Connections) ProtoMessage()    {}
func (*Connections) Descriptor() ([]byte, []int) {
	return fileDescriptor_b2295f3cef83aa84, []int{3}
}

func (m *Connections) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Connections.Unmarshal(m, b)
}
func (m *Connections) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Connections.Marshal(b, m, deterministic)
}
func (m *Connections) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Connections.Merge(m, src)
}
func (m *Connections) XXX_Size() int {
	return xxx_messageInfo_Connections.Size(m)
}
func (m *Connections) XXX_DiscardUnknown() {
	xxx_messageInfo_Connections.DiscardUnknown(m)
}

var xxx_messageInfo_Connections proto.InternalMessageInfo

func (m *Connections) GetConnections() []*Connection {
	if m != nil {
		return m.Connections
	}
	return nil
}

type HostInfo struct {
	HostName             string   `protobuf:"bytes,1,opt,name=host_name,json=hostName,proto3" json:"host_name,omitempty"`
	HostAddress          string   `protobuf:"bytes,2,opt,name=host_address,json=hostAddress,proto3" json:"host_address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HostInfo) Reset()         { *m = HostInfo{} }
func (m *HostInfo) String() string { return proto.CompactTextString(m) }
func (*HostInfo) ProtoMessage()    {}
func (*HostInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_b2295f3cef83aa84, []int{4}
}

func (m *HostInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HostInfo.Unmarshal(m, b)
}
func (m *HostInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HostInfo.Marshal(b, m, deterministic)
}
func (m *HostInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HostInfo.Merge(m, src)
}
func (m *HostInfo) XXX_Size() int {
	return xxx_messageInfo_HostInfo.Size(m)
}
func (m *HostInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_HostInfo.DiscardUnknown(m)
}

var xxx_messageInfo_HostInfo proto.InternalMessageInfo

func (m *HostInfo) GetHostName() string {
	if m != nil {
		return m.HostName
	}
	return ""
}

func (m *HostInfo) GetHostAddress() string {
	if m != nil {
		return m.HostAddress
	}
	return ""
}

type HostInfoList struct {
	HostList             []*HostInfo `protobuf:"bytes,1,rep,name=host_list,json=hostList,proto3" json:"host_list,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *HostInfoList) Reset()         { *m = HostInfoList{} }
func (m *HostInfoList) String() string { return proto.CompactTextString(m) }
func (*HostInfoList) ProtoMessage()    {}
func (*HostInfoList) Descriptor() ([]byte, []int) {
	return fileDescriptor_b2295f3cef83aa84, []int{5}
}

func (m *HostInfoList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HostInfoList.Unmarshal(m, b)
}
func (m *HostInfoList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HostInfoList.Marshal(b, m, deterministic)
}
func (m *HostInfoList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HostInfoList.Merge(m, src)
}
func (m *HostInfoList) XXX_Size() int {
	return xxx_messageInfo_HostInfoList.Size(m)
}
func (m *HostInfoList) XXX_DiscardUnknown() {
	xxx_messageInfo_HostInfoList.DiscardUnknown(m)
}

var xxx_messageInfo_HostInfoList proto.InternalMessageInfo

func (m *HostInfoList) GetHostList() []*HostInfo {
	if m != nil {
		return m.HostList
	}
	return nil
}

type Empty struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Empty) Reset()         { *m = Empty{} }
func (m *Empty) String() string { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()    {}
func (*Empty) Descriptor() ([]byte, []int) {
	return fileDescriptor_b2295f3cef83aa84, []int{6}
}

func (m *Empty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Empty.Unmarshal(m, b)
}
func (m *Empty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Empty.Marshal(b, m, deterministic)
}
func (m *Empty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Empty.Merge(m, src)
}
func (m *Empty) XXX_Size() int {
	return xxx_messageInfo_Empty.Size(m)
}
func (m *Empty) XXX_DiscardUnknown() {
	xxx_messageInfo_Empty.DiscardUnknown(m)
}

var xxx_messageInfo_Empty proto.InternalMessageInfo

func init() {
	proto.RegisterType((*QueryConnectionParameter)(nil), "connection_manager.QueryConnectionParameter")
	proto.RegisterType((*QueryConnectionsParameter)(nil), "connection_manager.QueryConnectionsParameter")
	proto.RegisterType((*Connection)(nil), "connection_manager.Connection")
	proto.RegisterType((*Connections)(nil), "connection_manager.Connections")
	proto.RegisterType((*HostInfo)(nil), "connection_manager.HostInfo")
	proto.RegisterType((*HostInfoList)(nil), "connection_manager.HostInfoList")
	proto.RegisterType((*Empty)(nil), "connection_manager.Empty")
}

func init() { proto.RegisterFile("protos/connection.proto", fileDescriptor_b2295f3cef83aa84) }

var fileDescriptor_b2295f3cef83aa84 = []byte{
	// 372 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x53, 0x4d, 0x4f, 0xc2, 0x40,
	0x10, 0x85, 0x02, 0x02, 0x53, 0xa2, 0xc9, 0x18, 0xa5, 0xa0, 0x51, 0xdc, 0x13, 0x31, 0x5a, 0x12,
	0x3c, 0x19, 0x2f, 0x82, 0x31, 0x11, 0x35, 0x7e, 0x60, 0xbc, 0x78, 0x21, 0x2b, 0x5d, 0xb5, 0xa6,
	0x1f, 0xa4, 0xbb, 0x1c, 0xf8, 0xe7, 0x1e, 0xcd, 0x2e, 0x2d, 0x4b, 0x0a, 0x22, 0xb7, 0xed, 0xdb,
	0xf7, 0xde, 0xbc, 0x99, 0x9d, 0x42, 0x75, 0x14, 0x85, 0x22, 0xe4, 0xad, 0x61, 0x18, 0x04, 0x6c,
	0x28, 0xdc, 0x30, 0xb0, 0x15, 0x82, 0xa8, 0x91, 0x81, 0x4f, 0x03, 0xfa, 0xc9, 0x22, 0x72, 0x0c,
	0xd6, 0xf3, 0x98, 0x45, 0x93, 0xab, 0xd9, 0xd5, 0x13, 0x8d, 0xa8, 0xcf, 0x04, 0x8b, 0x70, 0x13,
	0x0c, 0xd7, 0xb1, 0xb2, 0x8d, 0x6c, 0xb3, 0xdc, 0x37, 0x5c, 0x87, 0xb4, 0xa0, 0x96, 0xe2, 0x72,
	0x4d, 0x46, 0xc8, 0x7f, 0x85, 0x5c, 0xc4, 0x74, 0x75, 0x26, 0x3e, 0x80, 0xe6, 0xa6, 0xed, 0xf0,
	0x08, 0x2a, 0x1e, 0xe5, 0x62, 0x30, 0x1e, 0x39, 0x54, 0x30, 0xc7, 0x32, 0xd4, 0x8d, 0x29, 0xb1,
	0xd7, 0x29, 0x34, 0x33, 0xcd, 0x69, 0x53, 0xb4, 0xa0, 0x48, 0x1d, 0x27, 0x62, 0x9c, 0x5b, 0x79,
	0x05, 0x27, 0x9f, 0xe4, 0x11, 0xcc, 0xb9, 0x68, 0x78, 0x09, 0xa6, 0x6e, 0x98, 0x5b, 0xd9, 0x46,
	0xae, 0x69, 0xb6, 0x0f, 0xec, 0xc5, 0x21, 0xd8, 0x5a, 0xd5, 0x9f, 0x97, 0x90, 0x5b, 0x28, 0xdd,
	0x84, 0x5c, 0xf4, 0x82, 0x8f, 0x10, 0xf7, 0xa0, 0x2c, 0xcb, 0x0f, 0x02, 0xea, 0xb3, 0xb8, 0x89,
	0x92, 0x04, 0x1e, 0xa8, 0xcf, 0x64, 0x2b, 0xea, 0x32, 0x09, 0x16, 0xb7, 0x22, 0xb1, 0x4e, 0x1c,
	0xae, 0x07, 0x95, 0xc4, 0xeb, 0xde, 0xe5, 0x02, 0xcf, 0x63, 0x3f, 0xcf, 0x55, 0x43, 0x93, 0xd9,
	0xf6, 0x97, 0x65, 0x4b, 0x44, 0xd3, 0x6a, 0x52, 0x4a, 0x8a, 0x50, 0xb8, 0xf6, 0x47, 0x62, 0xd2,
	0xfe, 0x31, 0xa0, 0xa0, 0x5e, 0x04, 0xef, 0x00, 0xd4, 0x41, 0xb2, 0x39, 0xd6, 0x96, 0x19, 0x29,
	0x49, 0xbd, 0xb1, 0xaa, 0x86, 0x72, 0xcf, 0x20, 0x85, 0xad, 0xd4, 0x3b, 0xe3, 0xc9, 0x32, 0xd9,
	0x5f, 0x8b, 0x53, 0xff, 0x67, 0xc8, 0x24, 0x83, 0x2f, 0xb0, 0xad, 0xd4, 0x1d, 0xcf, 0x9b, 0x7f,
	0xb2, 0x15, 0xc1, 0x0f, 0x57, 0x7b, 0x72, 0x92, 0xc1, 0x6f, 0xd8, 0x4d, 0xef, 0x67, 0x57, 0x4d,
	0x04, 0x4f, 0xd7, 0x88, 0xaf, 0x77, 0x79, 0x8d, 0x5a, 0xdd, 0xea, 0xdb, 0x8e, 0xdd, 0xba, 0x58,
	0xa4, 0xbd, 0x6f, 0xa8, 0x7f, 0xed, 0xec, 0x37, 0x00, 0x00, 0xff, 0xff, 0x36, 0x38, 0x1a, 0x06,
	0x86, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// QueryClient is the client API for Query service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type QueryClient interface {
	QueryHosts(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*HostInfoList, error)
	QueryConnection(ctx context.Context, in *QueryConnectionParameter, opts ...grpc.CallOption) (*Connection, error)
	QueryAllConnections(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Connections, error)
	QueryConnectionsByHost(ctx context.Context, in *QueryConnectionsParameter, opts ...grpc.CallOption) (*Connections, error)
}

type queryClient struct {
	cc *grpc.ClientConn
}

func NewQueryClient(cc *grpc.ClientConn) QueryClient {
	return &queryClient{cc}
}

func (c *queryClient) QueryHosts(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*HostInfoList, error) {
	out := new(HostInfoList)
	err := c.cc.Invoke(ctx, "/connection_manager.Query/QueryHosts", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryClient) QueryConnection(ctx context.Context, in *QueryConnectionParameter, opts ...grpc.CallOption) (*Connection, error) {
	out := new(Connection)
	err := c.cc.Invoke(ctx, "/connection_manager.Query/QueryConnection", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryClient) QueryAllConnections(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Connections, error) {
	out := new(Connections)
	err := c.cc.Invoke(ctx, "/connection_manager.Query/QueryAllConnections", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryClient) QueryConnectionsByHost(ctx context.Context, in *QueryConnectionsParameter, opts ...grpc.CallOption) (*Connections, error) {
	out := new(Connections)
	err := c.cc.Invoke(ctx, "/connection_manager.Query/QueryConnectionsByHost", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// QueryServer is the server API for Query service.
type QueryServer interface {
	QueryHosts(context.Context, *Empty) (*HostInfoList, error)
	QueryConnection(context.Context, *QueryConnectionParameter) (*Connection, error)
	QueryAllConnections(context.Context, *Empty) (*Connections, error)
	QueryConnectionsByHost(context.Context, *QueryConnectionsParameter) (*Connections, error)
}

// UnimplementedQueryServer can be embedded to have forward compatible implementations.
type UnimplementedQueryServer struct {
}

func (*UnimplementedQueryServer) QueryHosts(ctx context.Context, req *Empty) (*HostInfoList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QueryHosts not implemented")
}
func (*UnimplementedQueryServer) QueryConnection(ctx context.Context, req *QueryConnectionParameter) (*Connection, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QueryConnection not implemented")
}
func (*UnimplementedQueryServer) QueryAllConnections(ctx context.Context, req *Empty) (*Connections, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QueryAllConnections not implemented")
}
func (*UnimplementedQueryServer) QueryConnectionsByHost(ctx context.Context, req *QueryConnectionsParameter) (*Connections, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QueryConnectionsByHost not implemented")
}

func RegisterQueryServer(s *grpc.Server, srv QueryServer) {
	s.RegisterService(&_Query_serviceDesc, srv)
}

func _Query_QueryHosts_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryServer).QueryHosts(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/connection_manager.Query/QueryHosts",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryServer).QueryHosts(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Query_QueryConnection_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryConnectionParameter)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryServer).QueryConnection(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/connection_manager.Query/QueryConnection",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryServer).QueryConnection(ctx, req.(*QueryConnectionParameter))
	}
	return interceptor(ctx, in, info, handler)
}

func _Query_QueryAllConnections_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryServer).QueryAllConnections(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/connection_manager.Query/QueryAllConnections",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryServer).QueryAllConnections(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Query_QueryConnectionsByHost_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryConnectionsParameter)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryServer).QueryConnectionsByHost(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/connection_manager.Query/QueryConnectionsByHost",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryServer).QueryConnectionsByHost(ctx, req.(*QueryConnectionsParameter))
	}
	return interceptor(ctx, in, info, handler)
}

var _Query_serviceDesc = grpc.ServiceDesc{
	ServiceName: "connection_manager.Query",
	HandlerType: (*QueryServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "QueryHosts",
			Handler:    _Query_QueryHosts_Handler,
		},
		{
			MethodName: "QueryConnection",
			Handler:    _Query_QueryConnection_Handler,
		},
		{
			MethodName: "QueryAllConnections",
			Handler:    _Query_QueryAllConnections_Handler,
		},
		{
			MethodName: "QueryConnectionsByHost",
			Handler:    _Query_QueryConnectionsByHost_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "protos/connection.proto",
}
